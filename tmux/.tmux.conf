# for tmux 3.2
set -as terminal-features ",$TERM:RGB"

# Set correct term
set -g default-terminal "tmux-256color"
set-option -g default-terminal "screen-256color"
set -ag terminal-overrides ",$TERM:RGB"
set -sg escape-time 0

set -g status-right '#(TZ="Europe/Amsterdam" date +"#H %%H:%%M %%d-%%h-%y")'

unbind C-b
# set-option -g prefix C-A
# bind-key C-A send-prefix

# Set the prefix to Ctrl+Space
set -g prefix C-Space

# Send prefix to a nested tmux session by doubling the prefix
bind C-Space send-prefix

# Bind r to source the tmux config
bind r source-file ~/.tmux.conf

# Increase scrollback buffer size
set -g history-limit 12000

# Use Vi mode
setw -g mode-keys vi

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Allow tmux to set the terminal title
set -g set-titles on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# Switch between two most recently used windows
bind Space last-window

# switch between two most recently used sessions
bind b switch-client -l

# Neovim cursors
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
set-option -g focus-events on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# Undercurl - tokyonight nvim
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
set -g status-style 'bg=#333333 fg=#5eacd3'

# Clipboard
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Statusline Colors
set -g status-style bg=terminal,fg=terminal

# Find and open in tmux with Ctrl + f
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind ^ switch-client -l

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
    'bind-key -T copy-mode-vi v send-keys -X begin-selection;'

# Mouse mode
setw -g mouse on

#  window with a list of sessions to switch to
bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "copied tmux buffer to system clipboard"

